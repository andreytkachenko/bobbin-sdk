(peripheral
    (group-name DCB)
    (name DCB)
    (size 0x20)
    (address 0xe000edf0)
    (description "Debug Core Block")
    (register
        (name DHCSR)
        (offset 0x0)
        (size 0x20)
        (description "Debug Halting Control and Status Register")
        (field
            (name DBGKEY)
            (bit-offset 16)
            (bit-width 16)
            (description "Debug Key. 0xA05F must be written whenever this register is written. Reads back as status bits [25:16]. If not written as Key, the write operation is ignored and no bits are written into the register.")
        )           
        (field
            (name S_RESET_ST)
            (bit-offset 25)
            (bit-width 1)
            (description "Indicates that the core has been reset, or is now being reset, since the last time this bit was read. This a sticky bit that clears on read. So, reading twice and getting 1 then 0 means it was reset in the past. Reading twice and getting 1 both times means that it is being reset now (held in reset still).")
        )       
        (field
            (name S_RETIRE_ST)
            (bit-offset 24)
            (bit-width 1)
            (description "Indicates that an instruction has completed since last read. This is a sticky bit that clears on read. This determines if the core is stalled on a load/store or fetch.")
        )
        (field
            (name S_LOCKUP)
            (bit-offset 19)
            (bit-width 1)
            (description "Reads as one if the core is running (not halted) and a lockup condition is present.")
        )
        (field
            (name S_SLEEP)
            (bit-offset 18)
            (bit-width 1)
            (description "ndicates that the core is sleeping (WFI, WFE or SLEEP-ON-EXIT). Must use C_HALT to gain control or wait for interrupt to wake-up.")
        )
        (field
            (name S_HALT)
            (bit-offset 17)
            (bit-width 1)
            (description "The core is in debug state when S_HALT is set.")
        )
        (field
            (name S_REGRDY)
            (bit-offset 16)
            (bit-width 1)
            (description "Register Read/Write on the Debug Core Register Selector register is available. Last transfer is complete.")
        )  
        (field
            (name C_SNAPSTALL)
            (bit-offset 5)
            (bit-width 1)
            (description "If the core is stalled on a load/store operation the stall ceases and the instruction is forced to complete. This enables Halting debug to gain control of the core. It can only be set if: C_DEBUGEN = 1 C_HALT = 1 The core reads S_RETIRE_ST as 0. This indicates that no instruction has advanced. This prevents misuse. The bus state is Unpredictable when this is used. S_RETIRE can detect core stalls on load/store operations.")
        )  
        (field
            (name C_MASKINTS)
            (bit-offset 3)
            (bit-width 1)
            (description "Mask interrupts when stepping or running in halted debug. Does not affect NMI, which is not maskable. Must only be modified when the processor is halted (S_HALT == 1).")
        )  
        (field
            (name C_STEP)
            (bit-offset 2)
            (bit-width 1)
            (description "Steps the core in halted debug. When C_DEBUGEN = 0, this bit has no effect. Must only be modified when the processor is halted (S_HALT == 1).")
        )
        (field
            (name C_HALT)
            (bit-offset 1)
            (bit-width 1)
            (description "Halts the core. This bit is set automatically when the core Halts. For example Breakpoint. This bit clears on core reset. This bit can only be written if C_DEBUGEN is 1, otherwise it is ignored. When setting this bit to 1, C_DEBUGEN must also be written to 1 in the same value (value[1:0] is 2â€™b11). The core can halt itself, but only if C_DEBUGEN is already 1 and only if it writes with b11).")
        )
        (field
            (name C_DEBUGEN)
            (bit-offset 0)
            (bit-width 1)
            (description "Enables debug. This can only be written by AHB-AP and not by the core. It is ignored when written by the core, which cannot set or clear it.
The core must write a 1 to it when writing C_HALT to halt itself.")
        )
    )
    (register
        (name DCRSR)
        (offset 0x4)
        (size 0x20)
        (description "Debug Core Register Selector Register")
        (field
            (name REGWNR)
            (bit-offset 16)
            (bit-width 1)
            (description "Write = 1, Read = 0")
        )
        (field
            (name REGSEL)
            (bit-offset 0)
            (bit-width 4)
            (description "Register Select")
        )           
    )    
    (register
        (name DERDR)
        (offset 0x8)
        (size 0x20)
        (description "Debug Core Register Data Register")
        (field
            (name DATA)
            (bit-offset 0)
            (bit-width 32)
            (description "This is the data value written to the register selected by the Debug Register Selector Register.")
        )           
    )        
    (register
        (name DEMCR)
        (offset 0xc)
        (size 0x20)
        (description "Debug Exception and Monitor Control Register")
        (field
            (name TRCENA)
            (bit-offset 24)
            (bit-width 1)
            (description "This bit must be set to 1 to enable use of the trace and debug blocks.")
        )
        (field
            (name MON_REQ)
            (bit-offset 19)
            (bit-width 1)
            (description "This enables the monitor to identify how it wakes up: 1 = woken up by MON_PEND, 0 = woken up by debug exception.")
        )   
        (field
            (name MON_STEP)
            (bit-offset 18)
            (bit-width 1)
            (description "When MON_EN = 1, this steps the core. When MON_EN = 0, this bit is ignored. This is the equivalent to C_STEP. Interrupts are only stepped according to the priority of the monitor and settings of PRIMASK, FAULTMASK, or BASEPRI.")
        )   
        (field
            (name MON_PEND)
            (bit-offset 17)
            (bit-width 1)
            (description "Pend the monitor to activate when priority permits.")
        )   
        (field
            (name MON_EN)
            (bit-offset 16)
            (bit-width 1)
            (description "Enable the debug monitor.")
        )
        (field
            (name VC_HARDERR)
            (bit-offset 10)
            (bit-width 1)
            (description "Debug trap on Hard Fault.")
        )           
        (field
            (name VC_INTERR)
            (bit-offset 9)
            (bit-width 1)
            (description "Debug Trap on interrupt/exception service errors. These are a subset of other faults and catches before BUSERR or HARDERR.")
        )           
        (field
            (name VC_BUSERR)
            (bit-offset 8)
            (bit-width 1)
            (description "Debug Trap on normal Bus error.")
        )           
        (field
            (name VC_STATERR)
            (bit-offset 7)
            (bit-width 1)
            (description "Debug trap on Usage Fault state errors.")
        )           
        (field
            (name VC_CHKERR)
            (bit-offset 6)
            (bit-width 1)
            (description "Debug trap on Usage Fault enabled checking errors.")
        )           
        (field
            (name VC_NOCPERR)
            (bit-offset 5)
            (bit-width 1)
            (description "Debug trap on Usage Fault access to Coprocessor which is not present or marked as not present in CAR register.")
        )           
        (field
            (name VC_MMERR)
            (bit-offset 4)
            (bit-width 1)
            (description "Debug trap on Memory Management faults.")
        )           
        (field
            (name VC_CORERESET)
            (bit-offset 0)
            (bit-width 1)
            (description "Reset Vector Catch. Halt running system if Core reset occurs.")
        )           
    )            
)